# =====================================================
# Supabase Medical Research Backend - Environment Variables
# Copy this file to .env and fill in your actual values
# =====================================================

# =====================================================
# SUPABASE CONFIGURATION
# =====================================================

# Supabase Project URL (from your Supabase dashboard)
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase Anonymous Key (safe to use in frontend)
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key

# Supabase Service Role Key (backend only - keep secret!)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-service-role-key

# Database URL (for direct PostgreSQL connections)
DATABASE_URL=postgresql://postgres:[password]@db.[project-id].supabase.co:5432/postgres

# =====================================================
# FRONTEND ENVIRONMENT (.env.local)
# =====================================================

# Next.js Public Environment Variables
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your-anon-key

# API Base URL
NEXT_PUBLIC_API_URL=http://localhost:5000

# =====================================================
# SECURITY CONFIGURATION
# =====================================================

# JWT Secret for additional security
JWT_SECRET_KEY=your-ultra-secure-jwt-secret-key-change-in-production

# Encryption key for sensitive data
ENCRYPTION_KEY=your-32-character-encryption-key

# =====================================================
# STORAGE CONFIGURATION
# =====================================================

# Storage bucket names
FUNDUS_IMAGES_BUCKET=fundus-images

# File upload limits
MAX_FILE_SIZE_MB=50
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/tiff

# =====================================================
# ML PIPELINE CONFIGURATION
# =====================================================

# Model training configuration
ML_TRAINING_BATCH_SIZE=32
ML_VALIDATION_SPLIT=0.2
ML_TEST_SPLIT=0.1

# Model storage
MODEL_STORAGE_BUCKET=ml-models
MODEL_ARTIFACTS_PATH=artifacts/

# =====================================================
# MONITORING & LOGGING
# =====================================================

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Sentry DSN for error tracking (optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =====================================================
# EMAIL CONFIGURATION (for notifications)
# =====================================================

# SMTP Configuration
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password
MAIL_DEFAULT_SENDER=your-email@gmail.com

# =====================================================
# EXTERNAL SERVICES (optional)
# =====================================================

# Google Maps API (for location services)
GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# OpenAI API (for AI features)
OPENAI_API_KEY=sk-your-openai-api-key

# =====================================================
# DEVELOPMENT SETTINGS
# =====================================================

# Flask environment
FLASK_ENV=development
FLASK_DEBUG=True

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =====================================================
# PRODUCTION SETTINGS
# =====================================================

# Set these for production deployment
# FLASK_ENV=production
# FLASK_DEBUG=False
# CORS_ORIGINS=https://your-domain.com

# =====================================================
# SETUP INSTRUCTIONS
# =====================================================

# 1. Create a Supabase project at https://supabase.com/dashboard
# 2. Go to Settings > API to get your URL and keys
# 3. Copy this file to .env and fill in your values
# 4. For frontend, copy relevant variables to frontend/.env.local
# 5. Run the database migrations:
#    - Execute backend/supabase_schema.sql in Supabase SQL Editor
#    - Execute backend/supabase_auth_rls.sql
#    - Execute backend/supabase_storage_config.sql
# 6. Create the fundus-images storage bucket in Supabase Dashboard
# 7. Set up user accounts with proper roles (researcher/ml_pipeline)

# =====================================================
# SECURITY NOTES
# =====================================================

# - Never commit .env files to version control
# - Use different keys for development and production
# - Rotate keys regularly
# - Use service role key only in backend
# - Keep anon key for frontend use only
# - Monitor access logs regularly

# =====================================================
# EXAMPLE USER CREATION
# =====================================================

# Create researcher user via Supabase Auth API:
# POST https://your-project.supabase.co/auth/v1/signup
# {
#   "email": "researcher@example.com",
#   "password": "secure-password",
#   "data": {
#     "role": "researcher",
#     "name": "Dr. Jane Smith"
#   }
# }

# Create ML pipeline user:
# POST https://your-project.supabase.co/auth/v1/signup
# {
#   "email": "ml-pipeline@example.com",
#   "password": "secure-password",
#   "data": {
#     "role": "ml_pipeline",
#     "name": "ML Training Pipeline"
#   }
# }

# =====================================================
# TESTING CONFIGURATION
# =====================================================

# Test database (optional - for running tests)
TEST_DATABASE_URL=postgresql://postgres:[password]@db.[project-id].supabase.co:5432/postgres_test

# Test storage bucket
TEST_FUNDUS_IMAGES_BUCKET=test-fundus-images

# =====================================================
# BACKUP CONFIGURATION
# =====================================================

# Backup storage (optional)
BACKUP_STORAGE_BUCKET=database-backups
BACKUP_FREQUENCY_HOURS=24

# =====================================================
# PERFORMANCE MONITORING
# =====================================================

# Database connection pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# Cache settings (if using Redis)
REDIS_URL=redis://localhost:6379/0
CACHE_TTL_SECONDS=3600
